@{
    /* Reference the relevant _Layout file here */
    <!-- _PageStart.cshtml is being used in this instance. It loads _Layout.cshtml -->
    /* PageData collection */
    Page.Title       = "Sell - Post Your Advertisement";
    Page.Description = "Are you looking for a place on the Web where you can list your items for sale?"; 
    Page.Description+= " Well, look no further. You can sell your stuff to people in your area.";
    
    var result       = "";
    /// Database access
    var db           = Database.Open("Classifieds");
    var sql          = "SELECT * FROM Categories";
    var categories   = db.Query(sql);
    
    <!-- Validation & Business Rules Logic -->
    if(IsPost){
        if(Request["title"].IsEmpty() ){ ModelState.AddError("title","Please provide a title"); }
        if(Request["title"].Length > 200 ){ ModelState.AddError("title","Your title cannot exceed 200 characters"); }
        if(Request["description"].IsEmpty() ){ ModelState.AddError("description","You must provide a description"); }
        if(Request["duration"].IsEmpty() ){ ModelState.AddError("duration","Please choose a duration"); }
        if(Request["price"].IsEmpty() ){ ModelState.AddError("price","Please provide a price"); }
        if(!Request["price"].IsDecimal() && !Request["price"].IsEmpty() ){ ModelState.AddError("price","Please provide a valid number for the price"); }
        if(Request["condition"].IsEmpty() ){ ModelState.AddError("condition","Please state the condition of your item"); }
        /*if(Request["email"].IsEmpty() ){ ModelState.AddError("email","Please provide an email address"); }
        if(!Request["email"].IsEmpty() && !Functions.IsValidEmail(Request["email"]) ){ ModelState.AddError("email","Please provide a valid email address"); }
        */
        if(Request["categoryId"].IsEmpty() ){ ModelState.AddError("categoryId","Please chosse a category for your item"); }
        
        <!-- display message at the top of screen, only if any of the tests failed -->
        if(!ModelState.IsValid){ 
                ModelState.AddFormError("Please fix the errors below before submitting the form"); 
        }
        else{
            var message = "<p>Details of your item for sale:</p>";
            message += "Title: " + Request["title"] + "<br />";
            message += "Description: " + Request["description"] + "<br />";
            message += "Duration: " + Request["duration"] + " days<br />";
            message += "Price: " + String.Format("{0:c}", Request["price"].AsFloat());
            message += "<br />";
            message += "Condition: " + Request["condition"];
            //message += "Category: " + Request["categoryId"];
            
            // prepare to get user email address from database.
            // Get the current user id logged in and get user email address
            var id   = WebSecurity.GetUserId(WebSecurity.CurrentUserName); 
            sql      = "SELECT Email FROM Users WHERE UserId = @0";
            // email address to send message to:
            var email= db.QueryValue(sql, id);
            
            WebMail.Send(
                    //to: Request["email"], 
                    to: email, 
                    subject: "Advertisement confirmation", 
                    body: message, 
                    isBodyHtml: true
            );
            result = "Your advertisement details have been sent to you by email";
            sql = @"INSERT INTO Items (Title, Description, Price, 
                    CategoryId, DatePosted, Condition, Duration, UserId) VALUES 
                    (@0, @1, @2, @3,GetDate(), @4, @5, @6)";
            var parameters = new[]{Request["title"], Request["description"],       
                            Request["price"], Request["categoryId"], 
                            Request["condition"], Request["duration"], id.ToString() };
            // insert data in to items table
            db.Execute(sql, parameters);

            // remove Cache
            WebCache.Remove("cachedData");

            // send user to item listing page
            Response.Redirect("~/Default.cshtml");
        }
    }
}
<script type="text/javascript">
    $(document).ready(function(){
        $('#post-advert').validate({ /* the form to validate */
            rules: {
                title: {
                    required: true,
                    maxlength:200
                },
                description: 'required',
                duration: 'required',
                condition: 'required',
                price: {
                    required: true,
                    number: true
                },
                categoryId: 'required',
                /*email: {
                    required: true,
                    email: true
                }, */
                
            },
            messages: {
                title: {
                    required: 'You must provide a title',
                    maxlength: ' *Your title must not exceed 200 characters'
                },
                description: ' *You must provide a description',
                duration: ' *You must indicate a duration',
                condition: ' *You must specify the condition of your item',
                price: {
                    required: ' *You must provide a price',
                    number: ' *Your price must be a valid number'
                },
                categoryId: "You must choose a category for your item",
              
                /*email: {
                    required: ' *You must provide your email address',
                    email: ' *You must provide a valid email address'
                }, */
            },
        errorPlacement: function(error, element){
           if(element.is(":radio") ){
               error.prependTo( $('#radio-error'));
           }else{
               error.insertAfter(element);
           }
        }
            
        });
    });
</script>

<!-- ADD STATIC (html) or DYNAMIC CONTENT (Razor Scripts), BELOW THIS SECTION -->
<h1>Sell Your Item</h1>
@if(Roles.IsUserInRole("Seller") ){
    <div>@result</div>
        <form id="post-advert" action="@Href("~/Sell")" method="post">
            <!-- fieldset adds a border around it's child elements -->
            <fieldset>
                    <!-- caption for fieldset -->
                    <legend>Post Your Advertisement</legend>
                    @Html.ValidationSummary(true)
                    <br/>
                    <!-- Add Persistent values using Request["myValue"] -->
                    <div>
                        <label for="title">Title*</label>
                    </div>
                    <div>
                    <input type="text" name="title" value="@Request["title"]"/>
                        @Html.ValidationMessage("title")
                    </div>
                    <br/>
                    <div>
                        <label for="description">Description*</label>
                    </div>
                    <div>
                    <textarea name="description">@Request["description"]</textarea>
                        @Html.ValidationMessage("description")
                    </div>
                    <br/>
                    <!-- Add Persistent values using Helpers -->
                    <div>
                        <label for="duration">Duration*</label>
                    </div>
                    <div>
                    <select name="duration">
                        <option value="" @Helpers.Selected("","")>--Choose one--</option>
                        <option value="1" @Helpers.Selected("Duration","1")>1 Day</option>
                        <option value="3" @Helpers.Selected("Duration","3")>3 Days</option>
                        <option value="7" @Helpers.Selected("Duration","7")>7 Days</option>
                        <option value="14" @Helpers.Selected("Duration","14")>14 days</option>
                    </select>
                        @Html.ValidationMessage("duration")
                    </div>
                    <br/>
                    <div>
                        <label for="price">Price*[i.e. 53.00]</label>
                    </div>
                    <div>
                    <input type="text" name="price" value="@Request["price"]"/>
                        @Html.ValidationMessage("price")
                    </div>
                    <br/>
                    <div>
                        <label for="condition">Condition*</label>
                    </div>
                    <div>
                        <input type="radio" name="condition" value="Fair" @Helpers.Checked("Condition","Fair")/>Fair
                        <input type="radio" name="condition" value="Good" @Helpers.Checked("Condition","Good")/>Good
                        <input type="radio" name="condition" value="As New" @Helpers.Checked("Condition","As New")/>As New
                            <span id="radio-error"></span>
                            @Html.ValidationMessage("condition")
                    </div>
                    <br/>
                    <div>
                        <label for="categoryId">Category*</label>
                    </div>
                    <div>
                        <select name="categoryId">
                            <option value="">--Choose Category--</option>
                            @foreach(var category in categories){
                                <option value="@category.CategoryId" 
                                    @( category.CategoryId == Request["categoryId"].AsInt() ? 
                                        " selected=\"selected\"" : "")>
                                    @category.Category</option>
                            }
                        </select>
                        @Html.ValidationMessage("categoryId")
                    </div>
                    <br/>
                    <!--    
                    <div>
                        <label for="email">Your Email Address*</label>
                    </div>
                    <div>
                        <input type="text" name="email" value="@@Request["email"]"/>
                        @@Html.ValidationMessage("email")
                    </div>
                        -->
                    <br/>
                    <div>
                        <input type="submit" name="Submit" value="Post Add"/>
                    </div>
            </fieldset>
        </form>
}
else{
    <p>You need to be  <a href="@Href("/Account/Login")">logged in</a> 
        to post items for sale.
        If you do not have an account, please
        <a href="@Href("/Account/Register")">register</a> first.</p>
}
